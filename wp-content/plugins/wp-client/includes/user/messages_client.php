<?php
 global $wpdb, $current_user, $post; $wpc_clients_staff = $this->cc_get_settings( 'clients_staff' ); if( isset( $_POST['submit'] ) && isset( $_POST['private_message'] ) && '' != $_POST['private_message'] ) { $sent_from = get_current_user_id(); $sent_to_ids = $this->cc_get_client_managers( $user_id ); if( is_array( $sent_to_ids ) && 0 < count( $sent_to_ids ) ) { foreach( $sent_to_ids as $sent_to ) { $wpdb->query( $wpdb->prepare( "INSERT INTO {$wpdb->prefix}wpc_client_comments
                SET user_id = %d,
                    page_id = %d,
                    time = %d,
                    comment = '%s',
                    sent_from = %d,
                    sent_to = %d,
                    new_flag = 1", $user_id, $post->ID, time(), $_POST['private_message'], $sent_from, $sent_to ) ); } } else { $sent_to = 0; $wpdb->query( $wpdb->prepare( "INSERT INTO {$wpdb->prefix}wpc_client_comments
            SET user_id = %d,
                page_id = %d,
                time = %d,
                comment = '%s',
                sent_from = %d,
                sent_to = %d,
                new_flag = 1", $user_id, $post->ID, time(), $_POST['private_message'], $sent_from, $sent_to ) ); } $wpc_general = $this->cc_get_settings( 'general' ); $user_data = get_userdata( $sent_from ); if ( $user_data ) { $username = $user_data->get( 'user_login' ); } else { $username = ''; } $args = array( 'client_id' => $user_id, 'user_name' => $username, 'message' => nl2br( htmlspecialchars( stripslashes( $_POST['private_message'] ) ) ) ); if( isset( $_POST['cc_email'] ) && isset( $wpc_clients_staff['add_cc_email'] ) && 'yes' == $wpc_clients_staff['add_cc_email'] ) { $to = $_POST['cc_email'] ; if( is_email( $to ) ) $this->cc_mail( 'notify_cc_about_message', $to, $args, 'notify_cc_about_message' ) ; } $manager_ids = $this->cc_get_client_managers( $user_id ); if( is_array( $manager_ids ) && count( $manager_ids ) ) { foreach( $manager_ids as $manager_id ) { if ( 0 < $manager_id ) { $manager = get_userdata( $manager_id ); if ( $manager ) { $manager_email = $manager->get( 'user_email' ); $this->cc_mail( 'notify_admin_about_message', $manager_email, $args, 'notify_admin_about_message' ); } } else { $args2 = array( 'role' => 'wpc_admin', 'fields' => array( 'user_email' ) ); $admin_emails = get_users( $args2 ); $emails_array = array(); if( isset( $admin_emails ) && is_array( $admin_emails ) && 0 < count( $admin_emails ) ) { foreach( $admin_emails as $admin_email ) { $emails_array[] = $admin_email->user_email; } } if( !( isset( $wpc_clients_staff['send_pm_email_to_admin'] ) && 'no' == $wpc_clients_staff['send_pm_email_to_admin'] ) ) { $emails_array[] = get_option( 'admin_email' ); } foreach( $emails_array as $to_email ) { $this->cc_mail( 'notify_admin_about_message', $to_email, $args, 'notify_admin_about_message' ); } } } } $args2 = array( 'role' => 'wpc_admin', 'fields' => array( 'user_email' ) ); $admin_emails = get_users( $args2 ); $emails_array = array(); if( isset( $admin_emails ) && is_array( $admin_emails ) && 0 < count( $admin_emails ) ) { foreach( $admin_emails as $admin_email ) { $emails_array[] = $admin_email->user_email; } } if( !( isset( $wpc_clients_staff['send_pm_email_to_admin'] ) && 'no' == $wpc_clients_staff['send_pm_email_to_admin'] ) ) { $emails_array[] = get_option( 'admin_email' ); } foreach( $emails_array as $to_email ) { $this->cc_mail( 'notify_admin_about_message', $to_email, $args, 'notify_admin_about_message' ); } $redirect_after = ''; if ( isset( $atts['redirect_after'] ) && '' != $atts['redirect_after'] ) { $redirect_after = $atts['redirect_after']; } else { if( isset( $_GET['msg'] ) && 'success' == $_GET['msg'] ) { unset( $_GET['msg'] ); $redirect_after = ( is_ssl() ? 'https://' : 'http://' ) . $_SERVER["HTTP_HOST"] . $_SERVER["SCRIPT_URL"]; } } do_action( 'wp_client_redirect', $redirect_after ); } $start_day_date = strtotime("now 00:00:00"); $yesterday_date = $start_day_date - 60*60*24; $week_date = $start_day_date - 60*60*24*7; $month_date = $start_day_date - 60*60*24*30; $_three_month = date( 'm', $start_day_date ) - 2; $quarter_date = strtotime( date('Y') . "-" . $_three_month . "-01 00:00:00" ); $_six_month = date( 'm', $start_day_date ) - 5; $half_date = strtotime( date('Y') . "-" . $_six_month . "-01 00:00:00" ); $year_date = strtotime( date('Y') . "-01-01 00:00:00" ); $message_n = ( isset( $atts['show_number'] ) && !empty( $atts['show_number'] ) && is_numeric( $atts['show_number'] ) ) ? $atts['show_number'] : 10; $code = md5( 'wpc_client_' . $user_id . '_get_client_mess' ); if( isset( $atts['show_filters'] ) && 'yes' == $atts['show_filters'] ) { $messages = $wpdb->get_results( $wpdb->prepare( "SELECT * FROM {$wpdb->prefix}wpc_client_comments WHERE user_id=%d AND time >= {$yesterday_date} GROUP BY sent_from, time, comment ORDER BY time DESC LIMIT 0, %d", $user_id, $message_n ), ARRAY_A ); $count_messages = $wpdb->get_col( $wpdb->prepare( "SELECT COUNT(id) FROM {$wpdb->prefix}wpc_client_comments WHERE user_id=%d AND time >= {$yesterday_date} GROUP BY sent_from, time, comment", $user_id ) ); $count_messages = count( $count_messages ); } else { $messages = $wpdb->get_results( $wpdb->prepare( "SELECT * FROM {$wpdb->prefix}wpc_client_comments WHERE user_id=%d GROUP BY sent_from, time, comment ORDER BY time DESC LIMIT 0, %d", $user_id, $message_n ), ARRAY_A ); $count_messages = $wpdb->get_col( $wpdb->prepare( "SELECT COUNT(id) FROM {$wpdb->prefix}wpc_client_comments WHERE user_id=%d GROUP BY sent_from, time, comment", $user_id ) ); $count_messages = count( $count_messages ); } if( is_array( $messages ) && 0 < count( $messages ) ) { foreach( $messages as $k=>$message ) { $text = ''; if ( $current_user->ID == $message['sent_from'] ) { $text .= __( 'You', WPC_CLIENT_TEXT_DOMAIN ); } elseif ( 0 == $message['sent_from'] ) { $text .= __( 'Administrator', WPC_CLIENT_TEXT_DOMAIN ); } else { $user = get_userdata( $message['sent_from'] ); if ( $user ) { if ( '' != $user->get( 'display_name' ) ) { $text .= $user->get( 'display_name' ); } else { $text .= get_user_meta( $message['sent_from'], 'nickname', true ); } } else { $text .= __( '(deleted user)', WPC_CLIENT_TEXT_DOMAIN ); } } $messages[$k]['sent_from_name'] = $text; $messages[$k]['date'] = $this->cc_date_format( $message['time'] ); if ( $current_user->ID != $message['sent_from'] && 2 == $message['new_flag'] ) { $messages[$k]['comment'] = '<span style="color: #ff0000;">' . __( 'NEW! ', WPC_CLIENT_TEXT_DOMAIN ) . '</span><b>' . nl2br( htmlspecialchars( stripslashes( $message['comment'] ) ) ) . '</b>'; $wpdb->update( $wpdb->prefix . 'wpc_client_comments', array( 'new_flag' => 0 ), array( 'id' => $message['id'] ) ); } else { $messages[$k]['comment'] = nl2br( htmlspecialchars( stripslashes( $message['comment'] ) ) ); } } } else { $data['no_messages'] = __( 'No last messages', WPC_CLIENT_TEXT_DOMAIN ); } $data['ajax_pagination'] = false; $data['count_messages'] = $count_messages; $data['message_n'] = $message_n; $data['messages'] = $messages; $data['javascript'] = '<input type="hidden" id="wpc_show_more_params" value="'.site_url().','.$user_id.','.$code.','.$count_messages.'" />'; $data['textarea'] = '<textarea style="width: 100%;" name="private_message" placeholder="' . __( 'Type your private message here', WPC_CLIENT_TEXT_DOMAIN ) . '"></textarea>'; $data['submit_form'] = '<input type="submit" name="submit" id="submit" class="button-primary" value="' . __( 'Send private message', WPC_CLIENT_TEXT_DOMAIN ) . '" />'; $data['more_messages'] = __( 'Show more messages', WPC_CLIENT_TEXT_DOMAIN ); $data['messages_title'] = __( 'Private Message History', WPC_CLIENT_TEXT_DOMAIN ); if ( isset( $wpc_clients_staff['add_cc_email'] ) && 'yes' == $wpc_clients_staff['add_cc_email'] ) { $data['show_add_cc_email'] = true; $data['add_cc_email'] = __( 'Add CC Email', WPC_CLIENT_TEXT_DOMAIN ); $data['cc_email'] = __( 'CC Email:', WPC_CLIENT_TEXT_DOMAIN ); } $data['messages_filters'] = ''; if( isset( $atts['show_filters'] ) && 'yes' == $atts['show_filters'] ) { $messages_time = $wpdb->get_col( $wpdb->prepare( "SELECT time FROM {$wpdb->prefix}wpc_client_comments WHERE user_id=%d", $user_id ) ); $yesterday_items = 0; $week_items = 0; $month_items = 0; $quarter_items = 0; $half_items = 0; $year_items = 0; foreach( $messages_time as $time ) { if( $time >= $yesterday_date ) { $yesterday_items++; } if( $time >= $week_date ) { $week_items++; } if( $time >= $month_date ) { $month_items++; } if( $time >= $quarter_date ) { $quarter_items++; } if( $time >= $half_date ) { $half_items++; } if( $time >= $year_date ) { $year_items++; } } $data['javascript'] = '<input type="hidden" id="wpc_show_more_params" value="'.site_url().','.$user_id.','.$code.','.$count_messages.',wpc_time_filter_yesterday" />'; $data['messages_filters'] = '<span style="float: left;margin:0px 10px 0px 0px;">' . __( 'View messages', WPC_CLIENT_TEXT_DOMAIN ) . ':</span>
        <ul class="subsubsub" style="float: left;margin: 2px 0px 0px 0px;padding: 0;list-style: none;">
            <li id="wpc_time_filter_yesterday"><a class="wpc_link_current wpc_ajax_time_filter" href="javascript:void(0);">' . __( 'Yesterday', WPC_CLIENT_TEXT_DOMAIN ) . '</a> | </li>'; if( 0 != $yesterday_items - $week_items ) { $data['messages_filters'] .= '<li id="wpc_time_filter_week"><a class="wpc_ajax_time_filter" href="javascript:void(0);">' . __( '7 days', WPC_CLIENT_TEXT_DOMAIN ) .'</a> | </li>'; } if( 0 != $month_items - $week_items ) { $data['messages_filters'] .= '<li id="wpc_time_filter_month"><a class="wpc_ajax_time_filter" href="javascript:void(0);">' . __( '30 days', WPC_CLIENT_TEXT_DOMAIN ) . '</a> | </li>'; } if( 0 != $quarter_items - $month_items ) { $data['messages_filters'] .= '<li id="wpc_time_filter_quarter"><a class="wpc_ajax_time_filter" href="javascript:void(0);">' . __( '3 month', WPC_CLIENT_TEXT_DOMAIN ) . '</a> | </li>'; } if( 0 != $half_items - $quarter_items ) { $data['messages_filters'] .= '<li id="wpc_time_filter_half"><a class="wpc_ajax_time_filter" href="javascript:void(0);">' . __( '6 month', WPC_CLIENT_TEXT_DOMAIN ) . '</a> | </li>'; } if( 0 != $year_items - $half_items ) { $data['messages_filters'] .= '<li id="wpc_time_filter_year"><a class="wpc_ajax_time_filter" href="javascript:void(0);">' . __( '1 year', WPC_CLIENT_TEXT_DOMAIN ) . '</a> | </li>'; } $data['messages_filters'] .= '<li id="wpc_time_filter_all"><a class="wpc_ajax_time_filter" href="javascript:void(0);">' . __( 'All', WPC_CLIENT_TEXT_DOMAIN ) . '</a></li></ul>'; } $out2 = $this->cc_getTemplateContent( 'wpc_client_com', $data, $user_id ); return do_shortcode( $out2 ); ?>